(function(){Js={ns:function(namespace){var p=window;if(namespace&&typeof namespace==="string"){var ns=namespace.split(".");for(var i=0;i<ns.length;i++){p[ns[i]]=p[ns[i]]||{};p=p[ns[i]]}}return p},apply:function(dest,src){if(typeof src==="object"&&dest){for(var p in src){if(src[p]!==undefined){dest[p]=src[p]}}}return dest},create:function(namespace,Constructor,cfg,SuperClass){if(!Constructor){throw new Error("moo: You must provide a constructor")}var name=Constructor.name;if(!name){throw new Error("moo: You must provide a named constructor")}var idxNs=namespace.lastIndexOf(".");var ns=idxNs===-1?window[namespace]=window[namespace]||{}:Js.ns(namespace);ns[name]=Constructor;if(SuperClass){Constructor.prototype=Object.create(SuperClass.prototype);Constructor.prototype.constructor=Constructor}Js.apply(Constructor.prototype,cfg);Constructor.prototype.superclass=SuperClass||Object;return Constructor}};Js.create("Js",function Observable(cfg){Js.apply(this,cfg);this.callbacks={};if(this.events){var scope=this.events.scope||this;for(var e in this.events){if(e!=="scope"){this.on(e,this.events[e],scope)}}}},{fire:function(){var args=Array.prototype.slice.call(arguments);var ev=args.shift();var cb=this.callbacks[ev];if(cb){for(var i=0;i<cb.length;i++){cb[i].fn.apply(cb[i].scope,args)}}},on:function(event,fn,scope){this.callbacks[event]=this.callbacks[event]||[];this.callbacks[event].push({fn:fn,scope:scope});return this},un:function(event){delete this.callbacks[event]}})})();